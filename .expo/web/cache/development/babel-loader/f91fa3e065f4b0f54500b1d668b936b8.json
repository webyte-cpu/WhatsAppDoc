{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\VSCode\\\\React-Native\\\\WhatsAppDoc(Authentication_branch)\\\\WhatsAppDoc\\\\src\\\\screens\\\\auth\\\\utils\\\\authProvider.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useReducer, useMemo, useEffect, useContext } from 'react';\nimport { getData } from \"./handleData\";\nimport { loginUser, logoutUser, signupUser } from \"./authMethods\";\nimport ACTIONS from \"./actions\";\nvar initialState = {\n  isLoading: true,\n  token: null,\n  errMsg: ''\n};\n\nvar reducer = function reducer(initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOGIN:\n      return _objectSpread(_objectSpread({}, initialState), {}, {\n        token: action.payload.token,\n        errMsg: null\n      });\n\n    case ACTIONS.LOGOUT:\n      return _objectSpread(_objectSpread({}, initialState), {}, {\n        token: null,\n        errMsg: null\n      });\n\n    case ACTIONS.RETRIEVE:\n      return _objectSpread(_objectSpread({}, initialState), {}, {\n        token: action.payload.token,\n        isLoading: false,\n        errMsg: null\n      });\n\n    case ACTIONS.ERR_MSG:\n      return _objectSpread(_objectSpread({}, initialState), {}, {\n        errMsg: action.payload.errMsg\n      });\n\n    default:\n      throw new Error(\"Invalid action type: \" + action.type);\n  }\n};\n\nvar AuthContext = createContext();\n\nvar useProvideAuth = function useProvideAuth() {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  useEffect(function () {\n    var bootstrapAsync = function bootstrapAsync() {\n      var token;\n      return _regeneratorRuntime.async(function bootstrapAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getData('token'));\n\n            case 2:\n              token = _context.sent;\n              dispatch({\n                type: ACTIONS.RETRIEVE,\n                payload: {\n                  token: token\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    bootstrapAsync();\n  }, []);\n\n  var _useMemo = useMemo(function () {\n    return {\n      login: function login(email, password, errCallback) {\n        return _regeneratorRuntime.async(function login$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", loginUser(dispatch, email, password, errCallback));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      logout: function logout() {\n        return _regeneratorRuntime.async(function logout$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", logoutUser(dispatch));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      signup: function signup(userData) {\n        return _regeneratorRuntime.async(function signup$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", signupUser(dispatch, userData));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      onError: function onError(errMsg) {\n        return dispatch({\n          type: ACTIONS.ERR_MSG,\n          payload: {\n            errMsg: errMsg\n          }\n        });\n      }\n    };\n  }, []),\n      login = _useMemo.login,\n      logout = _useMemo.logout,\n      signup = _useMemo.signup,\n      onError = _useMemo.onError;\n\n  return {\n    state: state,\n    login: login,\n    logout: logout,\n    signup: signup,\n    onError: onError\n  };\n};\n\nvar AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var authContext = useProvideAuth();\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nvar useAuth = function useAuth() {\n  return useContext(AuthContext);\n};\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["C:/VSCode/React-Native/WhatsAppDoc(Authentication_branch)/WhatsAppDoc/src/screens/auth/utils/authProvider.js"],"names":["React","createContext","useReducer","useMemo","useEffect","useContext","getData","loginUser","logoutUser","signupUser","ACTIONS","initialState","isLoading","token","errMsg","reducer","action","type","LOGIN","payload","LOGOUT","RETRIEVE","ERR_MSG","Error","AuthContext","useProvideAuth","state","dispatch","bootstrapAsync","login","email","password","errCallback","logout","signup","userData","onError","AuthProvider","children","authContext","useAuth"],"mappings":"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","sourcesContent":["import React, {\r\n  createContext,\r\n  useReducer,\r\n  useMemo,\r\n  useEffect,\r\n  useContext,\r\n} from 'react';\r\nimport { getData } from './handleData';\r\nimport { loginUser, logoutUser, signupUser } from './authMethods';\r\nimport ACTIONS from './actions';\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  token: null,\r\n  errMsg: ''\r\n};\r\n\r\nconst reducer = (initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.LOGIN:\r\n      return {\r\n        ...initialState,\r\n        token: action.payload.token,\r\n        errMsg: null\r\n      };\r\n    case ACTIONS.LOGOUT:\r\n      return {\r\n        ...initialState,\r\n        token: null,\r\n        errMsg: null\r\n      };\r\n    case ACTIONS.RETRIEVE:\r\n      return {\r\n        ...initialState,\r\n        token: action.payload.token,\r\n        isLoading: false,\r\n        errMsg: null\r\n      };\r\n    case ACTIONS.ERR_MSG:\r\n      return {\r\n        ...initialState,\r\n        errMsg: action.payload.errMsg\r\n      };\r\n    default:\r\n      throw new Error(`Invalid action type: ${action.type}`);\r\n  }\r\n};\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst useProvideAuth = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // retrieve on first open of app\r\n  useEffect(() => {\r\n    const bootstrapAsync = async () => {\r\n      const token = await getData('token');\r\n      dispatch({ type: ACTIONS.RETRIEVE, payload: { token } });\r\n    };\r\n\r\n    bootstrapAsync();\r\n    // dispatch({ type: ACTIONS.LOGOUT })\r\n  }, []);\r\n\r\n  const { login, logout, signup, onError} = useMemo(\r\n    () => ({\r\n      login: async (email, password, errCallback) =>\r\n        loginUser(dispatch, email, password, errCallback),\r\n      logout: async () => logoutUser(dispatch),\r\n      signup: async (userData) => signupUser(dispatch, userData),\r\n      onError: (errMsg) => dispatch({ type: ACTIONS.ERR_MSG, payload: { errMsg }})\r\n    }),\r\n    []\r\n  );\r\n\r\n  return { state, login, logout, signup, onError};\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const authContext = useProvideAuth();\r\n  return (\r\n    <AuthContext.Provider value={authContext}>{children}</AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAuth = () => useContext(AuthContext);\r\n\r\nexport { AuthProvider, useAuth };\r\n"]},"metadata":{},"sourceType":"module"}