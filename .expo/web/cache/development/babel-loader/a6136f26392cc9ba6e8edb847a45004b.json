{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\VSCode\\\\React-Native\\\\WhatsAppDoc(Authentication_branch)\\\\WhatsAppDoc\\\\src\\\\screens\\\\auth\\\\forgotPassword.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Button, Text, Input, Icon, TopNavigation, TopNavigationAction, Divider } from '@ui-kitten/components';\nimport { AppRoute } from \"../../navigation/app-routes\";\nimport customStyle from \"../../../themes/styles\";\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      secureTextEntry = _useState2[0],\n      setSecureTextEntry = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputEmail = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var toggleSecureEntry = function toggleSecureEntry() {\n    return setSecureTextEntry(!secureTextEntry);\n  };\n\n  var showPasswordIcon = function showPasswordIcon(props) {\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: toggleSecureEntry,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, React.createElement(Icon, _extends({}, props, {\n      name: !secureTextEntry ? 'eye' : 'eye-off',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  var sendLink = function sendLink() {\n    return navigation.navigate(AppRoute.LOGIN);\n  };\n\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, customStyle.content), {}, {\n      backgroundColor: 'white'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    testID: \"email\",\n    label: \"Email\",\n    selectTextOnFocus: true,\n    placeholder: \"Enter email\",\n    value: inputEmail,\n    onChangeText: setEmail,\n    style: {\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: sendLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Send Link\"));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["C:/VSCode/React-Native/WhatsAppDoc(Authentication_branch)/WhatsAppDoc/src/screens/auth/forgotPassword.js"],"names":["React","useState","Button","Text","Input","Icon","TopNavigation","TopNavigationAction","Divider","AppRoute","customStyle","ForgotPassword","navigation","secureTextEntry","setSecureTextEntry","inputEmail","setEmail","password","setPassword","toggleSecureEntry","showPasswordIcon","props","sendLink","navigate","LOGIN","content","backgroundColor","paddingBottom"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SACEC,MADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,aALF,EAMEC,mBANF,EAOEC,OAPF,QAQO,uBARP;AASA,SAASC,QAAT;AACA,OAAOC,WAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACKX,QAAQ,CAAC,IAAD,CADb;AAAA;AAAA,MAClCY,eADkC;AAAA,MACjBC,kBADiB;;AAAA,mBAEVb,QAAQ,CAAC,EAAD,CAFE;AAAA;AAAA,MAElCc,UAFkC;AAAA,MAEtBC,QAFsB;;AAAA,mBAGTf,QAAQ,CAAC,EAAD,CAHC;AAAA;AAAA,MAGlCgB,QAHkC;AAAA,MAGxBC,WAHwB;;AAKzC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,WAAML,kBAAkB,CAAC,CAACD,eAAF,CAAxB;AAAA,GAA1B;;AAEA,MAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD;AAAA,WACvB,oBAAC,wBAAD;AAA0B,MAAA,OAAO,EAAEF,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,eAAUE,KAAV;AAAiB,MAAA,IAAI,EAAE,CAACR,eAAD,GAAmB,KAAnB,GAA2B,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADuB;AAAA,GAAzB;;AAMA,MAAMS,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAMV,UAAU,CAACW,QAAX,CAAoBd,QAAQ,CAACe,KAA7B,CAAN;AAAA,GAAjB;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAMd,WAAW,CAACe,OAAlB;AAA2BC,MAAAA,eAAe,EAAE;AAA5C,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACI,IAAA,MAAM,EAAC,OADX;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,iBAAiB,MAHrB;AAII,IAAA,WAAW,EAAC,aAJhB;AAKI,IAAA,KAAK,EAAEX,UALX;AAMI,IAAA,YAAY,EAAEC,QANlB;AAOI,IAAA,KAAK,EAAE;AAAEW,MAAAA,aAAa,EAAE;AAAjB,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVJ,CADF;AAcD,CA7BD;;AA+BA,eAAeX,cAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableWithoutFeedback } from 'react-native';\r\nimport {\r\n  Button,\r\n  Text,\r\n  Input,\r\n  Icon,\r\n  TopNavigation,\r\n  TopNavigationAction,\r\n  Divider,\r\n} from '@ui-kitten/components';\r\nimport { AppRoute } from '../../navigation/app-routes';\r\nimport customStyle from '../../../themes/styles';\r\n\r\nconst ForgotPassword = ({ navigation }) => {\r\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\r\n  const [inputEmail, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const toggleSecureEntry = () => setSecureTextEntry(!secureTextEntry);\r\n\r\n  const showPasswordIcon = (props) => (\r\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\r\n      <Icon {...props} name={!secureTextEntry ? 'eye' : 'eye-off'} />\r\n    </TouchableWithoutFeedback>\r\n  );\r\n\r\n  const sendLink = () => navigation.navigate(AppRoute.LOGIN);\r\n\r\n  return (\r\n    <View style={{...customStyle.content, backgroundColor: 'white'}}>\r\n      <Input\r\n          testID=\"email\"\r\n          label=\"Email\"\r\n          selectTextOnFocus\r\n          placeholder=\"Enter email\"\r\n          value={inputEmail}\r\n          onChangeText={setEmail}\r\n          style={{ paddingBottom: 10 }}\r\n        />\r\n        <Button onPress={sendLink}>Send Link</Button>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}