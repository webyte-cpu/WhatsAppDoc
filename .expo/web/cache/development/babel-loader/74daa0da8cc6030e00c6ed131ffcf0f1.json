{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\VSCode\\\\React-Native\\\\WhatsAppDoc(Authentication_branch)\\\\WhatsAppDoc\\\\src\\\\screens\\\\auth\\\\signUpDoctor.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { Input, Text, Button, useTheme } from '@ui-kitten/components';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { openImagePickerAsync } from \"../../components/filePicker\";\nimport customStyle from \"../../../themes/styles\";\n\nvar SignUpDoctor = function SignUpDoctor(_ref) {\n  var specialization = _ref.specialization,\n      licenseNum = _ref.licenseNum,\n      editDoctorDetails = _ref.editDoctorDetails;\n  var theme = useTheme();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedImg = _useState2[0],\n      setSelectedImg = _useState2[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(openImagePickerAsync());\n\n          case 2:\n            result = _context.sent;\n            setSelectedImg(result);\n            editDoctorDetails('licenseImg', result);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var imgPreview = React.createElement(Image, {\n    source: {\n      uri: selectedImg\n    },\n    style: customStyle.uploadImgContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  });\n  var noImgMsg = React.createElement(Text, {\n    category: \"c2\",\n    style: {\n      color: theme['text-hint-color']\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, \"No image selected\");\n\n  var uploadImgContent = function uploadImgContent() {\n    return React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, React.createElement(Button, {\n      status: \"primary\",\n      appearance: \"outline\",\n      onPress: pickImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, \"Upload\"), React.createElement(View, {\n      style: {\n        marginLeft: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, selectedImg == null ? noImgMsg : imgPreview));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    testID: \"doctorVerification\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    category: \"h6\",\n    style: customStyle.formTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Practitioner Information\"), React.createElement(Input, {\n    testID: \"specialization\",\n    label: \"Specialization\",\n    placeholder: \"Enter Specialization\",\n    value: specialization,\n    onChangeText: function onChangeText(value) {\n      return editDoctorDetails('specialization', value);\n    },\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    testID: \"licenseNum\",\n    label: \"License Number\",\n    placeholder: \"Enter License Number\",\n    value: licenseNum,\n    onChangeText: function onChangeText(value) {\n      return editDoctorDetails('licenseNum', value);\n    },\n    keyboardType: \"number-pad\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    category: \"label\",\n    style: {\n      color: theme['text-hint-color']\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"License Image\"), React.createElement(Input, {\n    textStyle: {\n      color: theme['text-hint-color'],\n      fontSize: 12\n    },\n    accessoryLeft: uploadImgContent,\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SignUpDoctor;","map":{"version":3,"sources":["C:/VSCode/React-Native/WhatsAppDoc(Authentication_branch)/WhatsAppDoc/src/screens/auth/signUpDoctor.js"],"names":["React","useState","Input","Text","Button","useTheme","openImagePickerAsync","customStyle","SignUpDoctor","specialization","licenseNum","editDoctorDetails","theme","selectedImg","setSelectedImg","pickImage","result","imgPreview","uri","uploadImgContainer","noImgMsg","color","uploadImgContent","flexDirection","alignItems","marginLeft","formTitle","value","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Input, Text, Button, useTheme } from '@ui-kitten/components';\r\nimport { View, Image } from 'react-native';\r\nimport { openImagePickerAsync } from '../../components/filePicker';\r\nimport customStyle from '../../../themes/styles';\r\n\r\nconst SignUpDoctor = ({ specialization, licenseNum, editDoctorDetails }) => {\r\n  const theme = useTheme();\r\n  const [selectedImg, setSelectedImg] = useState(null);\r\n\r\n  const pickImage = async () => {\r\n    const result = await openImagePickerAsync();\r\n    setSelectedImg(result);\r\n    editDoctorDetails('licenseImg', result);\r\n  };\r\n\r\n  const imgPreview = (\r\n    <Image\r\n      source={{ uri: selectedImg }}\r\n      style={customStyle.uploadImgContainer}\r\n    />\r\n  );\r\n\r\n  const noImgMsg = (\r\n    <Text category=\"c2\" style={{ color: theme['text-hint-color'] }}>\r\n      No image selected\r\n    </Text>\r\n  );\r\n\r\n  const uploadImgContent = () => (\r\n    <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n      <Button status=\"primary\" appearance=\"outline\" onPress={pickImage}>\r\n        Upload\r\n      </Button>\r\n      <View style={{ marginLeft: 10 }}>\r\n        {selectedImg == null ? noImgMsg : imgPreview}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <View testID=\"doctorVerification\">\r\n        <Text category=\"h6\" style={customStyle.formTitle}>\r\n          Practitioner Information\r\n        </Text>\r\n        <Input\r\n          testID=\"specialization\"\r\n          label=\"Specialization\"\r\n          placeholder=\"Enter Specialization\"\r\n          value={specialization}\r\n          onChangeText={(value) => editDoctorDetails('specialization', value)}\r\n          returnKeyType=\"next\"\r\n        />\r\n        <Input\r\n          testID=\"licenseNum\"\r\n          label=\"License Number\"\r\n          placeholder=\"Enter License Number\"\r\n          value={licenseNum}\r\n          onChangeText={(value) => editDoctorDetails('licenseNum', value)}\r\n          keyboardType='number-pad'\r\n        />\r\n        <Text category=\"label\" style={{ color: theme['text-hint-color'] }}>\r\n          License Image\r\n        </Text>\r\n        <Input\r\n          textStyle={{ color: theme['text-hint-color'], fontSize: 12 }}\r\n          accessoryLeft={uploadImgContent}\r\n          disabled\r\n        />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpDoctor;\r\n"]},"metadata":{},"sourceType":"module"}