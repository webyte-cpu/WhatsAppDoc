{"ast":null,"code":"\"use strict\";\n/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ModalServiceType = function () {\n  function ModalServiceType() {\n    _classCallCheck(this, ModalServiceType);\n\n    this.panel = null;\n  }\n\n  _createClass(ModalServiceType, [{\n    key: \"mount\",\n    value: function mount(panel) {\n      this.panel = panel;\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      this.panel = null;\n    }\n  }, {\n    key: \"show\",\n    value: function show(element, config) {\n      if (this.panel) {\n        return this.panel.show(element, config);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(identifier, children) {\n      if (this.panel) {\n        this.panel.update(identifier, children);\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(identifier) {\n      if (this.panel) {\n        return this.panel.hide(identifier);\n      }\n    }\n  }]);\n\n  return ModalServiceType;\n}();\n\nexports.ModalService = new ModalServiceType();","map":{"version":3,"sources":["../../../../../src/components/theme/modal/modal.service.tsx"],"names":[],"mappings":";AAAA;;;;AAIG;;;;;;;;;;IAwDG,gB;AAAN,8BAAA;AAAA;;AAEE,SAAA,KAAA,GAAgC,IAAhC;AA2BD;;;;WAzBQ,eAAM,KAAN,EAAmC;AACxC,WAAK,KAAL,GAAa,KAAb;AACD;;;WAEM,mBAAO;AACZ,WAAK,KAAL,GAAa,IAAb;AACD;;;WAEM,cAAK,OAAL,EAAkC,MAAlC,EAA+D;AACpE,UAAI,KAAK,KAAT,EAAgB;AACd,eAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,OAAhB,EAAyB,MAAzB,CAAP;AACD;AACF;;;WAEM,gBAAO,UAAP,EAA2B,QAA3B,EAAuD;AAC5D,UAAI,KAAK,KAAT,EAAgB;AACd,aAAK,KAAL,CAAW,MAAX,CAAkB,UAAlB,EAA8B,QAA9B;AACD;AACF;;;WAEM,cAAK,UAAL,EAAuB;AAC5B,UAAI,KAAK,KAAT,EAAgB;AACd,eAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,UAAhB,CAAP;AACD;AACF;;;;;;AAgBU,OAAA,CAAA,YAAA,GAAe,IAAI,gBAAJ,EAAf","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Singleton service designed to manage modal components.\r\n *\r\n * @type ModalServiceType\r\n *\r\n * @method {(element: React.ReactElement<ModalPresentingBased>, config: ModalPresentingConfig) => string} show -\r\n * Shows component in a modal window. Returns its id.\r\n *\r\n * @method {(identifier: string) => string} hide - Hides component from a modal window and returns empty string.\r\n *\r\n * @method {(identifier: string, children: React.ReactNode) => void} update - Updates component from a modal window.\r\n *\r\n * @example Simple Usage\r\n *\r\n * ```\r\n * import React from 'react';\r\n * import { Layout, Button, Text, ModalService } from '@ui-kitten/components';\r\n *\r\n * export const ModalServiceShowcase = () => {\r\n *\r\n *   const modalID = '';\r\n *\r\n *   const showModal = () => {\r\n *     const contentElement = this.renderModalContentElement();\r\n *     this.modalID = ModalService.show(contentElement, { onBackdropPress: this.hideModal });\r\n *   };\r\n *\r\n *   const hideModal = () => {\r\n *     ModalService.hide(this.modalID);\r\n *   };\r\n *\r\n *   const renderModalContentElement = () => {\r\n *     return (\r\n *       <Layout>\r\n *         <Text>Hi, I'm modal!</Text>\r\n *       </Layout>\r\n *     );\r\n *   };\r\n *\r\n *   return (\r\n *     <Layout>\r\n *       <Button onPress={showModal}>SHOW MODAL</Button>\r\n *       <Button onPress={hideModal}>HIDE MODAL</Button>\r\n *     </Layout>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nclass ModalServiceType {\r\n    constructor() {\r\n        this.panel = null;\r\n    }\r\n    mount(panel) {\r\n        this.panel = panel;\r\n    }\r\n    unmount() {\r\n        this.panel = null;\r\n    }\r\n    show(element, config) {\r\n        if (this.panel) {\r\n            return this.panel.show(element, config);\r\n        }\r\n    }\r\n    update(identifier, children) {\r\n        if (this.panel) {\r\n            this.panel.update(identifier, children);\r\n        }\r\n    }\r\n    hide(identifier) {\r\n        if (this.panel) {\r\n            return this.panel.hide(identifier);\r\n        }\r\n    }\r\n}\r\nexports.ModalService = new ModalServiceType();\r\n//# sourceMappingURL=modal.service.js.map"]},"metadata":{},"sourceType":"script"}