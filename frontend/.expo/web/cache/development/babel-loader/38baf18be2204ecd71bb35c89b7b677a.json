{"ast":null,"code":"\"use strict\";\n/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar iconAnimation_1 = require(\"./iconAnimation\");\n\nvar iconRegistry_service_1 = require(\"./service/iconRegistry.service\");\n\nvar Icon = function (_react_1$default$Comp) {\n  _inherits(Icon, _react_1$default$Comp);\n\n  var _super = _createSuper(Icon);\n\n  function Icon(props) {\n    var _this;\n\n    _classCallCheck(this, Icon);\n\n    _this = _super.call(this, props);\n\n    _this.startAnimation = function (callback) {\n      _this.animation.start(callback);\n    };\n\n    _this.stopAnimation = function () {\n      _this.animation.stop();\n    };\n\n    _this.animation = iconAnimation_1.getIconAnimation(props.animation, props.animationConfig);\n    return _this;\n  }\n\n  _createClass(Icon, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.animation.release();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          pack = _this$props.pack,\n          animation = _this$props.animation,\n          iconProps = _objectWithoutProperties(_this$props, [\"name\", \"pack\", \"animation\"]);\n\n      var registeredIcon = iconRegistry_service_1.IconRegistryService.getIcon(name, pack);\n      return react_1.default.createElement(react_native_1.Animated.View, _extends({}, this.animation.toProps()), registeredIcon.icon.toReactElement(iconProps));\n    }\n  }]);\n\n  return Icon;\n}(react_1.default.Component);\n\nexports.Icon = Icon;\nIcon.defaultProps = {\n  animation: 'zoom'\n};","map":{"version":3,"sources":["../../../../../src/components/ui/icon/icon.component.tsx"],"names":[],"mappings":";AAAA;;;;AAIG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAKA,IAAA,eAAA,GAAA,OAAA,mBAAA;;AAKA,IAAA,sBAAA,GAAA,OAAA,kCAAA;;IA8Da,I;;;;;AAQX,gBAAY,KAAZ,EAA+B;AAAA;;AAAA;;AAC7B,8BAAM,KAAN;;AAQK,UAAA,cAAA,GAAiB,UAAC,QAAD,EAA0C;AAChE,YAAK,SAAL,CAAe,KAAf,CAAqB,QAArB;AACD,KAFM;;AAIA,UAAA,aAAA,GAAgB,YAAW;AAChC,YAAK,SAAL,CAAe,IAAf;AACD,KAFM;;AAXL,UAAK,SAAL,GAAiB,eAAA,CAAA,gBAAA,CAAiB,KAAK,CAAC,SAAvB,EAAkC,KAAK,CAAC,eAAxC,CAAjB;AAF6B;AAG9B;;;;WAEM,gCAAoB;AACzB,WAAK,SAAL,CAAe,OAAf;AACD;;;WAUM,kBAAM;AAAA,wBACqC,KAAK,KAD1C;AAAA,UACH,IADG,eACH,IADG;AAAA,UACG,IADH,eACG,IADH;AAAA,UACS,SADT,eACS,SADT;AAAA,UACuB,SADvB;;AAEX,UAAM,cAAc,GAAsB,sBAAA,CAAA,mBAAA,CAAoB,OAApB,CAA4B,IAA5B,EAAkC,IAAlC,CAA1C;AAEA,aACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,cAAA,CAAA,QAAA,CAAS,IAAV,EAAc,SAAA,EAAA,EAAK,KAAK,SAAL,CAAe,OAAf,EAAL,CAAd,EACG,cAAc,CAAC,IAAf,CAAoB,cAApB,CAAmC,SAAnC,CADH,CADF;AAKD;;;;EAlC0B,OAAA,CAAA,OAAA,CAAM,S;;AAAnC,OAAA,CAAA,IAAA,GAAA,IAAA;AAES,IAAA,CAAA,YAAA,GAAmC;AACxC,EAAA,SAAS,EAAE;AAD6B,CAAnC","sourceRoot":"","sourcesContent":["\"use strict\";\r\n/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst react_1 = __importDefault(require(\"react\"));\r\nconst react_native_1 = require(\"react-native\");\r\nconst iconAnimation_1 = require(\"./iconAnimation\");\r\nconst iconRegistry_service_1 = require(\"./service/iconRegistry.service\");\r\n/**\r\n * Animated Icon component.\r\n *\r\n * @extends React.Component\r\n *\r\n * @method {(callback?: Animated.EndCallback) => void} startAnimation - Toggle animation to start.\r\n *\r\n * @method {() => void} stopAnimation - Toggle animation to stop.\r\n *\r\n * @property {string} name - A name of icon registered in a specific pack.\r\n *\r\n * @property {string} pack - A name of icon pack registered in IconRegistry that is able to provide\r\n * an icon for a given name.\r\n *\r\n * @property {string} animation - Animation name. Can be `zoom`, `pulse` and `shake`.\r\n * Defaults to *zoom*.\r\n *\r\n * @property {AnimationConfig} animationConfig - Animation config.\r\n *\r\n * @property {any} ...props - Accepts any props\r\n * depending on the component registered in IconRegistry for a given `name` property.\r\n * In case of using `@ui-kitten/eva-icons` package, Icon accepts any props for react-native-svg component.\r\n *\r\n * @overview-example IconSimpleUsage\r\n * Icon component provides a simple way to render image by requesting it from an icon set.\r\n * Icons come with [additional packages](guides/icon-packages),\r\n * that should be configured before using component.\r\n * We recommend using [Eva Icons](https://akveo.github.io/eva-icons),\r\n * to provide a full consistency with Eva Design System.\r\n *\r\n * @overview-example IconWithinComponents\r\n * All UI Kitten components that may contain inner views have support for Eva Icons.\r\n * When using icons as nested components, icon styles are handled by Eva.\r\n *\r\n * @overview-example IconAnimation\r\n * Icons have 3 types of animations: `zoom`, `pulse` and `shake`.\r\n *\r\n * @overview-example IconTheming\r\n * In particular cases, Icon should be styled in a different way.\r\n * In case of using Eva Icons it renders [svg images](https://github.com/react-native-community/react-native-svg).\r\n *\r\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\r\n */\r\nclass Icon extends react_1.default.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.startAnimation = (callback) => {\r\n            this.animation.start(callback);\r\n        };\r\n        this.stopAnimation = () => {\r\n            this.animation.stop();\r\n        };\r\n        this.animation = iconAnimation_1.getIconAnimation(props.animation, props.animationConfig);\r\n    }\r\n    componentWillUnmount() {\r\n        this.animation.release();\r\n    }\r\n    render() {\r\n        const { name, pack, animation, ...iconProps } = this.props;\r\n        const registeredIcon = iconRegistry_service_1.IconRegistryService.getIcon(name, pack);\r\n        return (react_1.default.createElement(react_native_1.Animated.View, Object.assign({}, this.animation.toProps()), registeredIcon.icon.toReactElement(iconProps)));\r\n    }\r\n}\r\nexports.Icon = Icon;\r\nIcon.defaultProps = {\r\n    animation: 'zoom',\r\n};\r\n//# sourceMappingURL=icon.component.js.map"]},"metadata":{},"sourceType":"script"}