{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sean/Documents/finalProject/WhatsAppDoc/frontend/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport * as eva from \"@eva-design/eva\";\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport { useFonts } from 'expo-font';\nimport { default as theme } from \"./themes/custom-theme.json\";\nimport { default as mapping } from \"./mapping.json\";\nimport AppLoading from 'expo-app-loading';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport LoginScreen from \"./src/components/loginScreen\";\nimport { AppNavigator } from \"./src/components/navigation\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nvar client = new ApolloClient({\n  uri: \"https://graphql-pokemon.now.sh/\",\n  cache: new InMemoryCache()\n});\n\nvar App = function App() {\n  return React.createElement(React.Fragment, null, React.createElement(ApolloProvider, {\n    client: client,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(IconRegistry, {\n    icons: EvaIconsPack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), React.createElement(ApplicationProvider, _extends({}, eva, {\n    theme: _objectSpread(_objectSpread({}, eva.light), theme),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(AppNavigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }))));\n};\n\nAppRegistry.registerComponent();\nexport default App;","map":{"version":3,"sources":["/home/sean/Documents/finalProject/WhatsAppDoc/frontend/App.js"],"names":["StatusBar","React","eva","ApplicationProvider","IconRegistry","useFonts","default","theme","mapping","AppLoading","EvaIconsPack","LoginScreen","AppNavigator","ApolloClient","InMemoryCache","ApolloProvider","client","uri","cache","App","light","AppRegistry","registerComponent"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,uBAAlD;AACA,SAAQC,QAAR,QAAuB,WAAvB;AACA,SAASC,OAAO,IAAIC,KAApB;AACA,SAASD,OAAO,IAAIE,OAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,WAAP;AACA,SAASC,YAAT;;AAGA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,QAA4D,gBAA5D;AAQA,IAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC9BI,EAAAA,GAAG,EAAE,iCADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIJ,aAAJ;AAFuB,CAAjB,CAAf;;AAOA,IAAMK,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,0CACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAGN,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEA,oBAAC,mBAAD,eAAyBR,GAAzB;AACA,IAAA,KAAK,kCAAOA,GAAG,CAACkB,KAAX,GAAqBb,KAArB,CADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFA,CADF,CADF;AAaD,CAdD;;AAgBAc,WAAW,CAACC,iBAAZ;AACA,eAAeH,GAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, View, SafeAreaView } from 'react-native';\nimport * as eva from \"@eva-design/eva\";\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport {useFonts} from 'expo-font';\nimport { default as theme } from './themes/custom-theme.json';\nimport { default as mapping } from './mapping.json';\nimport AppLoading from 'expo-app-loading'\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport LoginScreen from './src/components/loginScreen';\nimport { AppNavigator } from './src/components/navigation';\n\nimport { AppRegistry } from 'react-native';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\n// Initialize Apollo Client\n// const client = new ApolloClient({\n//   uri: 'localhost:4000/graphql',\n  \n// });\n\nconst client = new ApolloClient({\n  uri: \"https://graphql-pokemon.now.sh/\",\n  cache: new InMemoryCache()\n});\n\n\n\nconst App = () => {\n  return (\n    <>\n      <ApolloProvider client={client}>\n          <IconRegistry icons={ EvaIconsPack } />\n      <ApplicationProvider {...eva} \n      theme={{ ...eva.light, ...theme }}\n      >\n        <AppNavigator/>\n      </ApplicationProvider>\n      </ApolloProvider>\n\n    </>\n  )\n};\n\nAppRegistry.registerComponent()\nexport default App\n"]},"metadata":{},"sourceType":"module"}