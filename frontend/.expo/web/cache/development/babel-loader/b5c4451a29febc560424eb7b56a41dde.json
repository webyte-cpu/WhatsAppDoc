{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"/home/sean/Documents/finalProject/WhatsAppDoc/frontend/src/components/Admin/verification.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport { Tab, TabView, Button, Icon, List, ListItem, Divider } from '@ui-kitten/components';\nimport DoctorDetails from \"./detailModal\";\nimport { dummyDataPending, dummyDataVerified } from \"./dummyData\";\nimport { gql, useQuery } from '@apollo/client';\nvar GET_DOCTORS = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  query getVerified{\\n    fname\\n    lname\\n  }\\n\\n\"])));\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 30\n  },\n  list: {\n    height: '100%'\n  }\n});\n\nvar Admin = function Admin() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedIndex = _useState2[0],\n      setSelectedIndex = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      viewDoctor = _useState4[0],\n      setViewDoctor = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visible = _useState6[0],\n      setVisible = _useState6[1];\n\n  var handleClose = function handleClose() {\n    return setVisible(false);\n  };\n\n  var handeShow = function handeShow(doctor) {\n    setVisible(true);\n    setViewDoctor(doctor);\n  };\n\n  var verifiedIcon = function verifiedIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"checkmark-circle-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var pendingIcon = function pendingIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"clock-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var detailBtn = function detailBtn(doctor) {\n    return React.createElement(Button, {\n      size: \"tiny\",\n      appearance: \"ghost\",\n      onPress: function onPress() {\n        return handeShow(doctor);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Details\");\n  };\n\n  var profile = function profile(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"person\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(ListItem, {\n      onPress: function onPress() {\n        return handeShow(item);\n      },\n      title: \"\" + item.name,\n      description: \"\" + item.specialization,\n      accessoryLeft: profile,\n      accessoryRight: function accessoryRight() {\n        return detailBtn(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Admin;","map":{"version":3,"sources":["/home/sean/Documents/finalProject/WhatsAppDoc/frontend/src/components/Admin/verification.js"],"names":["React","useState","Tab","TabView","Button","Icon","List","ListItem","Divider","DoctorDetails","dummyDataPending","dummyDataVerified","gql","useQuery","GET_DOCTORS","styles","StyleSheet","create","container","marginTop","list","height","Admin","selectedIndex","setSelectedIndex","viewDoctor","setViewDoctor","visible","setVisible","handleClose","handeShow","doctor","verifiedIcon","props","pendingIcon","detailBtn","profile","renderItem","item","index","name","specialization"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, TouchableWithoutFeedback, Touchable } from 'react-native';\nimport { Tab, TabView, Button, Icon, List, ListItem, Divider } from '@ui-kitten/components';\nimport DoctorDetails from './detailModal'\nimport { dummyDataPending, dummyDataVerified } from './dummyData'\nimport { gql, useQuery } from '@apollo/client';\n\nconst GET_DOCTORS = gql`\n  query getVerified{\n    fname\n    lname\n  }\n\n`;\n\nconst styles = StyleSheet.create({\n    container: {\n        marginTop: 30\n    },\n    list: {\n        height: '100%',\n    }\n});\n\nconst Admin = () => {\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const [viewDoctor, setViewDoctor] = useState({})\n    const [visible, setVisible] = useState(false);\n\n    const handleClose = () => setVisible(false);\n\n    const handeShow = (doctor) => {\n        setVisible(true)\n        setViewDoctor(doctor)\n    }\n\n    const verifiedIcon = (props) => (\n        <Icon {...props} name='checkmark-circle-outline' />\n    );\n\n    const pendingIcon = (props) => (\n        <Icon {...props} name='clock-outline' />\n    );\n\n    const detailBtn = (doctor) => (\n        <Button\n            size='tiny'\n            appearance='ghost'\n            onPress={() => handeShow(doctor)}>Details</Button>\n    );\n\n    const profile = (props) => (\n        <Icon {...props} name='person' />\n    );\n\n    const renderItem = ({ item, index }) => (\n        <ListItem\n            onPress={() => handeShow(item)}\n            title={`${item.name}`}\n            description={`${item.specialization}`}\n            accessoryLeft={profile}\n            accessoryRight={() => detailBtn(item)}\n        />\n    );\n\n    return (\n        <View style={styles.container}>\n            {/* <TabView\n                selectedIndex={selectedIndex}\n                onSelect={index => setSelectedIndex(index)} >\n                <Tab title='PENDING' icon={pendingIcon}>\n                    <List\n                        style={styles.list}\n                        data={dummyDataPending}\n                        ItemSeparatorComponent={Divider}\n                        renderItem={renderItem}\n                    />\n                </Tab>\n                <Tab title='VERIFIED' icon={verifiedIcon} >\n                    <List\n                        style={styles.list}\n                        data={dummyDataVerified}\n                        ItemSeparatorComponent={Divider}\n                        renderItem={renderItem}\n                    />\n                </Tab>\n            </TabView>\n            <DoctorDetails doctor={viewDoctor} isShown={visible} onHide={handleClose} /> */}\n        </View>\n    );\n};\n\nexport default Admin"]},"metadata":{},"sourceType":"module"}