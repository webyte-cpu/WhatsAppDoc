{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _jsxFileName = \"/home/sean/Documents/finalProject/WhatsAppDoc/frontend/src/components/Admin/verification.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Tab, TabView, Button, Icon, List, ListItem, Divider } from '@ui-kitten/components';\nimport DoctorDetails from \"./detailModal\";\nimport { dummyDataPending, dummyDataVerified } from \"./dummyData\";\nimport { gql, useQuery } from '@apollo/client';\nvar GET_DOCTORS = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  query getDoctors{\\n    doctors{\\n        id\\n        name\\n        specialization\\n  }\\n  }  \\n\\n\"])));\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 30\n  },\n  list: {\n    height: '100%'\n  }\n});\n\nfunction Admin() {\n  var _this = this;\n\n  var _useQuery = useQuery(GET_DOCTORS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return 'Loading...';\n  if (error) return \"Error! \" + error.message;\n  console.log(data);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Verified Doctors:\"), data.doctors.map(function (doctor) {\n    return React.createElement(View, {\n      key: doctor.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, doctor.name));\n  }));\n}\n\nexport default Admin;","map":{"version":3,"sources":["/home/sean/Documents/finalProject/WhatsAppDoc/frontend/src/components/Admin/verification.js"],"names":["React","useState","Tab","TabView","Button","Icon","List","ListItem","Divider","DoctorDetails","dummyDataPending","dummyDataVerified","gql","useQuery","GET_DOCTORS","styles","StyleSheet","create","container","marginTop","list","height","Admin","loading","error","data","message","console","log","doctors","map","doctor","id","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,QAA3C,EAAqDC,OAArD,QAAoE,uBAApE;AACA,OAAOC,aAAP;AACA,SAASC,gBAAT,EAA2BC,iBAA3B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,IAAMC,WAAW,GAAGF,GAAH,+KAAjB;AAYA,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ,GADkB;AAI7BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE;AADN;AAJuB,CAAlB,CAAf;;AA6EA,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACoBT,QAAQ,CAACC,WAAD,CAD5B;AAAA,MACLS,OADK,aACLA,OADK;AAAA,MACIC,KADJ,aACIA,KADJ;AAAA,MACWC,IADX,aACWA,IADX;;AAGb,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,mBAAiBA,KAAK,CAACE,OAAvB;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEKO,IAAI,CAACI,OAAL,CAAaC,GAAb,CAAiB,UAAAC,MAAM;AAAA,WACpB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,MAAM,CAACE,IAAd,CADJ,CADoB;AAAA,GAAvB,CAFL,CADJ;AAaH;;AAED,eAAeX,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, TouchableWithoutFeedback, Touchable, Text } from 'react-native';\nimport { Tab, TabView, Button, Icon, List, ListItem, Divider } from '@ui-kitten/components';\nimport DoctorDetails from './detailModal'\nimport { dummyDataPending, dummyDataVerified } from './dummyData'\nimport { gql, useQuery } from '@apollo/client';\n\nconst GET_DOCTORS = gql`\n  query getDoctors{\n    doctors{\n        id\n        name\n        specialization\n  }\n  }  \n\n`;\n\n\nconst styles = StyleSheet.create({\n    container: {\n        marginTop: 30\n    },\n    list: {\n        height: '100%',\n    }\n});\n\n// const Admin = () => {\n//     const [selectedIndex, setSelectedIndex] = useState(0);\n//     const [viewDoctor, setViewDoctor] = useState({})\n//     const [visible, setVisible] = useState(false);\n\n//     const handleClose = () => setVisible(false);\n\n//     const handeShow = (doctor) => {\n//         setVisible(true)\n//         setViewDoctor(doctor)\n//     }\n\n//     const verifiedIcon = (props) => (\n//         <Icon {...props} name='checkmark-circle-outline' />\n//     );\n\n//     const pendingIcon = (props) => (\n//         <Icon {...props} name='clock-outline' />\n//     );\n\n//     const detailBtn = (doctor) => (\n//         <Button\n//             size='tiny'\n//             appearance='ghost'\n//             onPress={() => handeShow(doctor)}>Details</Button>\n//     );\n\n//     const profile = (props) => (\n//         <Icon {...props} name='person' />\n//     );\n\n//     const renderItem = ({ item, index }) => (\n//         <ListItem\n//             onPress={() => handeShow(item)}\n//             title={`${item.name}`}\n//             description={`${item.specialization}`}\n//             accessoryLeft={profile}\n//             accessoryRight={() => detailBtn(item)}\n//         />\n//     );\n\n//     return (\n//         <View style={styles.container}>\n//             <TabView\n//                 selectedIndex={selectedIndex}\n//                 onSelect={index => setSelectedIndex(index)} >\n//                 <Tab title='PENDING' icon={pendingIcon}>\n//                     <List\n//                         style={styles.list}\n//                         data={dummyDataPending}\n//                         ItemSeparatorComponent={Divider}\n//                         renderItem={renderItem}\n//                     />\n//                 </Tab>\n//                 <Tab title='VERIFIED' icon={verifiedIcon} >\n//                     <List\n//                         style={styles.list}\n//                         data={dummyDataVerified}\n//                         ItemSeparatorComponent={Divider}\n//                         renderItem={renderItem}\n//                     />\n//                 </Tab>\n//             </TabView>\n//             <DoctorDetails doctor={viewDoctor} isShown={visible} onHide={handleClose} />\n//         </View>\n//     );\n// };\n\nfunction Admin() {\n    const { loading, error, data } = useQuery(GET_DOCTORS);\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    console.log(data)\n\n    return (\n        <View style={styles.container}>\n            <Text>Verified Doctors:</Text>\n            {data.doctors.map(doctor => (\n                <View key={doctor.id}>\n                    <Text>{doctor.name}</Text>\n                </View>\n         \n            ))}\n        </View>\n\n\n    );\n}\n\nexport default Admin"]},"metadata":{},"sourceType":"module"}