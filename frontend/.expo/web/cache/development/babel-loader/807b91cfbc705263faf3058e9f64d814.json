{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\VSCode\\\\React-Native\\\\WhatsAppDoc(Admin)\\\\WhatsAppDoc\\\\frontend\\\\src\\\\components\\\\Admin\\\\verification.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Tab, TabView, Button, Icon, List, ListItem, Divider, useTheme } from '@ui-kitten/components';\nimport DoctorDetails from \"./detailModal\";\nimport { dummyData } from \"./dummyData\";\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 30\n  }\n});\nvar theme = useTheme();\n\nvar profile = function profile(props) {\n  return React.createElement(Icon, _extends({}, props, {\n    name: \"person\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 28\n    }\n  }));\n};\n\nvar verifiedIcon = function verifiedIcon(props) {\n  return React.createElement(Icon, _extends({}, props, {\n    name: \"checkmark-circle-outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }));\n};\n\nvar pendingIcon = function pendingIcon(props) {\n  return React.createElement(Icon, _extends({}, props, {\n    name: \"clock-outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 32\n    }\n  }));\n};\n\nvar pendingList = dummyData.filter(function (doctor) {\n  return doctor.verification == 'Pending';\n});\nvar verifiedList = dummyData.filter(function (doctor) {\n  return doctor.verification == 'Verified';\n});\n\nvar Admin = function Admin() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedIndex = _useState2[0],\n      setSelectedIndex = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      viewDoctor = _useState4[0],\n      setViewDoctor = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visible = _useState6[0],\n      setVisible = _useState6[1];\n\n  var handleClose = function handleClose() {\n    return setVisible(false);\n  };\n\n  var handleShow = function handleShow(doctor) {\n    setVisible(true);\n    setViewDoctor(doctor);\n  };\n\n  styles = (_readOnlyError(\"styles\"), useStyleSheet(themedStyles));\n\n  var detailBtn = function detailBtn(doctor) {\n    return React.createElement(Text, {\n      style: {\n        color: theme['color-primary-400']\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Details\");\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(ListItem, {\n      title: \"\" + item.name,\n      description: \"\" + item.specialization,\n      accessoryLeft: profile,\n      accessoryRight: function accessoryRight() {\n        return item.verification == 'Verified' ? React.createElement(React.Fragment, null) : detailBtn(item);\n      },\n      onPress: function onPress() {\n        return handleShow(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(TabView, {\n    selectedIndex: selectedIndex,\n    onSelect: function onSelect(index) {\n      return setSelectedIndex(index);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Tab, {\n    title: \"PENDING\",\n    icon: pendingIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, React.createElement(List, {\n    data: pendingList,\n    ItemSeparatorComponent: Divider,\n    renderItem: renderItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), React.createElement(Tab, {\n    title: \"VERIFIED\",\n    icon: verifiedIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, React.createElement(List, {\n    data: verifiedList,\n    ItemSeparatorComponent: Divider,\n    renderItem: renderItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }))), React.createElement(DoctorDetails, {\n    doctor: viewDoctor,\n    isShown: visible,\n    onHide: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Admin;","map":{"version":3,"sources":["C:/VSCode/React-Native/WhatsAppDoc(Admin)/WhatsAppDoc/frontend/src/components/Admin/verification.js"],"names":["React","useState","Tab","TabView","Button","Icon","List","ListItem","Divider","useTheme","DoctorDetails","dummyData","styles","StyleSheet","create","container","marginTop","theme","profile","props","verifiedIcon","pendingIcon","pendingList","filter","doctor","verification","verifiedList","Admin","selectedIndex","setSelectedIndex","viewDoctor","setViewDoctor","visible","setVisible","handleClose","handleShow","useStyleSheet","themedStyles","detailBtn","color","renderItem","item","name","specialization","index"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAMA,SACIC,GADJ,EAEIC,OAFJ,EAGIC,MAHJ,EAIIC,IAJJ,EAIUC,IAJV,EAKIC,QALJ,EAMIC,OANJ,EAOIC,QAPJ,QAQS,uBART;AASA,OAAOC,aAAP;AACA,SAASC,SAAT;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ;AADkB,CAAlB,CAAf;AAMA,IAAMC,KAAK,GAAGR,QAAQ,EAAtB;;AAEA,IAAMS,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD;AAAA,SAAW,oBAAC,IAAD,eAAUA,KAAV;AAAiB,IAAA,IAAI,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;AAAA,CAAhB;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACD,KAAD;AAAA,SAAW,oBAAC,IAAD,eAAUA,KAAV;AAAiB,IAAA,IAAI,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;AAAA,CAArB;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACF,KAAD;AAAA,SAAW,oBAAC,IAAD,eAAUA,KAAV;AAAiB,IAAA,IAAI,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;AAAA,CAApB;;AAEA,IAAMG,WAAW,GAAGX,SAAS,CAACY,MAAV,CAAiB,UAAAC,MAAM;AAAA,SAAIA,MAAM,CAACC,YAAP,IAAuB,SAA3B;AAAA,CAAvB,CAApB;AACA,IAAMC,YAAY,GAAGf,SAAS,CAACY,MAAV,CAAiB,UAAAC,MAAM;AAAA,SAAIA,MAAM,CAACC,YAAP,IAAuB,UAA3B;AAAA,CAAvB,CAArB;;AAEA,IAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBAC0B1B,QAAQ,CAAC,CAAD,CADlC;AAAA;AAAA,MACT2B,aADS;AAAA,MACMC,gBADN;;AAAA,mBAEoB5B,QAAQ,CAAC,EAAD,CAF5B;AAAA;AAAA,MAET6B,UAFS;AAAA,MAEGC,aAFH;;AAAA,mBAGc9B,QAAQ,CAAC,KAAD,CAHtB;AAAA;AAAA,MAGT+B,OAHS;AAAA,MAGAC,UAHA;;AAKhB,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,UAAU,CAAC,KAAD,CAAhB;AAAA,GAApB;;AAEA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAACX,MAAD,EAAY;AAC3BS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,aAAa,CAACP,MAAD,CAAb;AACH,GAHD;;AAKAZ,EAAAA,MAAM,8BAAGwB,aAAa,CAACC,YAAD,CAAhB,CAAN;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACd,MAAD;AAAA,WACd,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACe,QAAAA,KAAK,EAAEtB,KAAK,CAAC,mBAAD;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADc;AAAA,GAAlB;;AAUA,MAAMuB,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WACf,oBAAC,QAAD;AACI,MAAA,KAAK,OAAKA,IAAI,CAACC,IADnB;AAEI,MAAA,WAAW,OAAKD,IAAI,CAACE,cAFzB;AAGI,MAAA,aAAa,EAAEzB,OAHnB;AAII,MAAA,cAAc,EAAE;AAAA,eAAMuB,IAAI,CAAChB,YAAL,IAAqB,UAArB,GAAkC,yCAAlC,GAA0Ca,SAAS,CAACG,IAAD,CAAzD;AAAA,OAJpB;AAKI,MAAA,OAAO,EAAG;AAAA,eAAMN,UAAU,CAACM,IAAD,CAAhB;AAAA,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe;AAAA,GAAnB;;AAUA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7B,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AACI,IAAA,aAAa,EAAEa,aADnB;AAEI,IAAA,QAAQ,EAAE,kBAAAgB,KAAK;AAAA,aAAIf,gBAAgB,CAACe,KAAD,CAApB;AAAA,KAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,SAAX;AAAqB,IAAA,IAAI,EAAEvB,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAEC,WADV;AAEI,IAAA,sBAAsB,EAAEd,OAF5B;AAGI,IAAA,UAAU,EAAEgC,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,EAUI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,UAAX;AAAsB,IAAA,IAAI,EAAEpB,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAEM,YADV;AAEI,IAAA,sBAAsB,EAAElB,OAF5B;AAGI,IAAA,UAAU,EAAEgC,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,CADJ,EAmBI,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEV,UAAvB;AAAmC,IAAA,OAAO,EAAEE,OAA5C;AAAqD,IAAA,MAAM,EAAEE,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CADA,CADJ;AAyBH,CA3DD;;AA6DA,eAAeP,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n    View, \r\n    StyleSheet, \r\n    ScrollView } \r\n    from 'react-native';\r\nimport { \r\n    Tab, \r\n    TabView, \r\n    Button, \r\n    Icon, List, \r\n    ListItem, \r\n    Divider,\r\n    useTheme  } \r\n    from '@ui-kitten/components';\r\nimport DoctorDetails from './detailModal'\r\nimport { dummyData } from './dummyData'\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginTop: 30\r\n    },\r\n});\r\n\r\nconst theme = useTheme();\r\n\r\nconst profile = (props) => <Icon {...props} name='person' />;\r\nconst verifiedIcon = (props) => <Icon {...props} name='checkmark-circle-outline'/>;\r\nconst pendingIcon = (props) => <Icon {...props} name='clock-outline'/>;\r\n\r\nconst pendingList = dummyData.filter(doctor => doctor.verification == 'Pending')\r\nconst verifiedList = dummyData.filter(doctor => doctor.verification == 'Verified')\r\n\r\nconst Admin = () => {\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n    const [viewDoctor, setViewDoctor] = useState({})\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const handleClose = () => setVisible(false);\r\n\r\n    const handleShow = (doctor) => {\r\n        setVisible(true)\r\n        setViewDoctor(doctor)\r\n    }\r\n\r\n    styles = useStyleSheet(themedStyles)\r\n\r\n    const detailBtn = (doctor) => (\r\n        <Text style={{color: theme['color-primary-400']}}>\r\n            Details\r\n        </Text>\r\n        // <Button \r\n        // size='tiny' \r\n        // appearance='ghost' \r\n        // onPress={ () => handleShow(doctor) }>Details</Button>\r\n    );\r\n\r\n    const renderItem = ({ item }) => (\r\n        <ListItem\r\n            title={`${item.name}`}\r\n            description={`${item.specialization}`}\r\n            accessoryLeft={profile}\r\n            accessoryRight={() => item.verification == 'Verified' ? <></> : detailBtn(item)}\r\n            onPress={ () => handleShow(item) }\r\n        />\r\n    );\r\n\r\n    return (\r\n        <ScrollView>\r\n        <View style={styles.container}>\r\n            <TabView\r\n                selectedIndex={selectedIndex}\r\n                onSelect={index => setSelectedIndex(index)} >\r\n                <Tab title='PENDING' icon={pendingIcon}>\r\n                    <List\r\n                        data={pendingList}\r\n                        ItemSeparatorComponent={Divider}\r\n                        renderItem={renderItem}\r\n                    />\r\n                </Tab>\r\n                <Tab title='VERIFIED' icon={verifiedIcon} >\r\n                    <List\r\n                        data={verifiedList}\r\n                        ItemSeparatorComponent={Divider}\r\n                        renderItem={renderItem}\r\n                    />\r\n                </Tab>\r\n            </TabView>\r\n            <DoctorDetails doctor={viewDoctor} isShown={visible} onHide={handleClose} />\r\n        </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nexport default Admin"]},"metadata":{},"sourceType":"module"}